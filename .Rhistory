strsplit(nt.pos.tmp, "X")
library(substring)
install.packages("substring")
data.frame(phred_score) %>%
mutate(phred = row.names(.)) %>%
gather(., key = nt.pos.tmp, value = count, -phred) %>%
transmute(nt.pos = strsplit(nt.pos.tmp, "X")[[1]][2])-> dd
dd
View(dd)
data.frame(phred_score) %>%
mutate(phred = row.names(.)) %>%
gather(., key = nt.pos.tmp, value = count, -phred) %>%
mutate(nt.pos = strsplit(nt.pos.tmp, "X")[[1]][2])-> dd
View(dd)
?separate
data.frame(phred_score) %>%
mutate(phred = row.names(.)) %>%
gather(., key = nt.pos.tmp, value = count, -phred) %>%
separate(., col = nt.pos.tmp) -> dd
data.frame(phred_score) %>%
mutate(phred = row.names(.)) %>%
gather(., key = nt.pos.tmp, value = count, -phred) %>%
separate(., col = nt.pos.tmp, into = c("A", "B")) -> dd
data.frame(phred_score) %>%
mutate(phred = row.names(.)) %>%
gather(., key = nt.pos.tmp, value = count, -phred) %>%
separate(., col = nt.pos.tmp, into = c("A", "B"), sep= "X") -> dd
View(dd)
data.frame(phred_score) %>%
mutate(phred = row.names(.)) %>%
gather(., key = nt.pos.tmp, value = count, -phred) %>%
separate(., col = nt.pos.tmp, into = c("scratch", "nt.pos"), sep= "X") %>%
select(-scratch)-> dd
View(dd)
View(dd)
data.frame(phred_score) %>%
mutate(phred = row.names(.)) %>%
gather(., key = nt.pos.tmp, value = count, -phred) %>%
separate(., col = nt.pos.tmp, into = c("scratch", "nt.pos"), sep= "X") %>%
select(-scratch) %>% -> dd
data.frame(phred_score) %>%
mutate(phred = row.names(.)) %>%
gather(., key = nt.pos.tmp, value = count, -phred) %>%
separate(., col = nt.pos.tmp, into = c("scratch", "nt.pos"), sep= "X") %>%
select(-scratch) -> dd
ggplot(dd) %>%
geom_boxplot(aes(x=nt.pos, y = count))
plotPhredQuant(fqq, 1)
str(phred_plot)
plot.iris <- ggplot(iris, aes(Sepal.Length, Sepal.Width)) +
geom_point() + facet_grid(. ~ Species) + stat_smooth(method = "lm") +
background_grid(major = 'y', minor = "none") + # add thin horizontal lines
panel_border() # and a border around each panel
# plot.mpg and plot.diamonds were defined earlier
ggdraw() +
draw_plot(plot.iris, 0, .5, 1, .5) +
draw_plot(plot.mpg, 0, 0, .5, .5) +
draw_plot(plot.diamonds, .5, 0, .5, .5) +
draw_plot_label(c("A", "B", "C"), c(0, 0, 0.5), c(1, 0.5, 0.5), size = 15)
library(gridExtra)
grid.arrange(hist, line, phred_plot, ncol=2, nrow =2)
grid.arrange(hist, line, ncol=2, nrow =2)
phred_grob = ggplotGrob(phred_plot)
contigs <- read.table(file = "contigs.csv", sep= ",",
header = T, stringsAsFactors = F)
test_set <- contigs[1:1000,]
test_set
ggplot(test_set) +
geom_point(aes(x= reorder(factor(contig_name), coverage), y=coverage)) +
scale_y_log10()
ggplot(test_set) +
geom_point(aes(x= reorder(factor(contig_name), coverage), y=coverage))
ggplot(test_set) +
geom_point(aes(x= reorder(contig_name, coverage), y=coverage))
test_set %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage/10, 0)) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_point() + scale_x_log10()
cov_plot + geom_line() + scale_x_log10()
test_set %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage/100, 0)) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_line() + scale_x_log10()
cov_plot + geom_line()
cov_plot + geom_line() + scale_x_log10() + scale_y_log10()
cov_plot + geom_line() + scale_x_log10(limits = c(0, 100))
cov_plot + geom_line() + scale_x_log10(breaks = c(0, 10, 100, 1000))
cov_plot + geom_line() + scale_x_log10(breaks = c(0, 10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this count")
cov_plot + geom_line() + scale_x_log10(breaks = c(0, 10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
test_set %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage/10, 0)) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_line() + scale_x_log10(breaks = c(0, 10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
cov_plot + geom_line() + scale_x_log10(breaks = c(0, 10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1,5, 10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
test_set %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage, 0)) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
test_set %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage/2, 0)) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
test_set %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage, 0)) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
test_set %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage/10, 0)*10) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
cov_count
View(cov_count)
View(test_set)
test_set %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage, 0)) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
View(cov_count)
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
cov_plot + geom_line() + scale_x_log10() + scale_y_log10() +
ggplot(data= test_set) +
geom_histogram(coverage)
cov_plot + geom_line() + scale_x_log10() + scale_y_log10() +
ggplot(data= cov_plot) +
geom_histogram(coverage)
ggplot(data= cov_count) +
geom_histogram(coverage)
cov_count
ggplot(data= cov_count) +
geom_histogram(cov)
ggplot(data= cov_count) +
geom_histogram(N)
ggplot(data= cov_count) +
geom_histogram(aes(N))
contigs %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage/10, 0)*10) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_point() + scale_x_log10()
contigs %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage/10, 0)*10) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_line() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
contigs %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage/10, 0)*10) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_point() + scale_x_log10(breaks = c(0,1:10, 100, 1000)) +
xlab("coverage") + ylab("No. reads with this coverage")
contigs %>%
select(coverage, contig_name) %>%
transmute(cov = round(coverage/10, 0)*10) %>%
group_by(cov) %>%
summarise(N = n()) -> cov_count
cov_plot <- ggplot(data = cov_count, aes(cov, N, group = 1))
cov_plot + geom_point() + scale_x_log10(breaks = c(0,1:10, 100, 1000, 10000, 100000)) +
xlab("coverage") + ylab("No. reads with this coverage")
cov_plot + geom_point() + scale_x_log10(breaks = c(0,1:10, 100, 1000, 10000, 100000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() + scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
opt <- options("scipen" = 20)
cov_plot + geom_point() + scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() + scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_log10() +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_log10(breaks =c( 5,10,100,1000,10000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_log10(breaks =c( 1:9,10,100,1000,10000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_log10(breaks =c( 1, 5,10,100,1000,10000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_continuous(breaks =c( 1, 5,10,100,1000,10000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_continuous(breaks =c(10,100,500, 1000,10000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_continuous(breaks =c(100,500, 1000, 5000, 10000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_continuous(breaks =c(100, 1000, 5000, 10000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
ggplot(data= contigs) +
geom_histogram(aes(coverage))
ggplot(data= contigs) +
geom_histogram(aes(coverage), bins = 20)
ggplot(data= contigs) +
geom_histogram(aes(coverage), bins = 1000)
ggplot(data= contigs) +
geom_histogram(aes(coverage), bins = 1000) + scale_x_log10()
ggplot(data= contigs) +
geom_histogram(aes(coverage), bins = 100) + scale_x_log10()
ggplot(data= contigs) +
geom_density(aes(coverage), bins = 100) + scale_x_log10()
ggplot(data= contigs) +
geom_density(aes(coverage)) + scale_x_log10()
ggplot(data= contigs) +
geom_histogram(aes(coverage), bins = 100) + scale_x_log10()
ggplot(data= contigs) +
geom_histogram(aes(coverage), bins = 100) + scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000))
contigs
ggplot(data= contigs) +
geom_histogram(aes(round(coverage, 0)), bins = 100) + scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000))
log(0)
ggplot(data= contigs) +
geom_histogram(aes(round(coverage +1 , 0)), bins = 100) + scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000))
ggplot(data= contigs) +
geom_histogram(aes(round(coverage + 1 , 0)), bins = 100) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000))
ggplot(data= contigs) +
geom_histogram(aes(round(coverage + 1 , 0)), bins = 100, fill="red" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000))
ggplot(data= contigs) +
geom_histogram(aes(round(coverage + 1 , 0)),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000))
ggplot(data= contigs) +
geom_histogram(aes(round(coverage + 1 , 0)),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
ggtitle("t")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_continuous(breaks =c(100, 1000, 5000, 10000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
# histogram showing the distribution of coverage
ggplot(data= contigs) +
geom_histogram(aes(round(coverage + 1 , 0)),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
ggtitle("coverage distribution")
cov_plot + geom_point() +
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
scale_y_log10(breaks =c( 1, 5,10,100,1000,10000)) +
xlab("coverage") + ylab("No. contigs with this coverage")
ggplot(data= contigs) +
geom_histogram(aes(round(coverage + 1 , 0)),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
ggtitle("coverage distribution")
ggplot(data= contigs) +
geom_histogram(aes(length),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000))
ggplot(data= contigs) +
geom_histogram(aes(length),
bins = 100,
fill="#00B0F6" )
ggplot(data= contigs) +
geom_histogram(aes(length),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10(breaks = c(0,10, 50, 100, 1000))
ggplot(data= contigs) +
geom_histogram(aes(length),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10(breaks = c(0,10, 50, 100, 1000, 1500, 2000, 5000))
ggplot(data= contigs) +
geom_histogram(aes(length),
bins = 100,
fill="#00B0F6" ) +
scale_x_log10()
ggplot(data= contigs) +
geom_histogram(aes(length),
bins = 100,
fill="#00B0F6" ) +
scale_x_log10(breaks=c(50,500,5000))
detach("package:cowplot", unload=T)
ggplot(data= contigs) +
geom_histogram(aes(length),
bins = 100,
fill="#00B0F6" ) +
scale_x_log10(breaks=c(50,500,5000))
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr, ggplot2, cowplot)
opt <- options("scipen" = 20) # don't use sci notation
contigs <- read.table(file = "contigs.csv", sep= ",",
header = T, stringsAsFactors = F)
contigs <- contigs[1:1000,]
cov_dist_plot <- ggplot(data= contigs) +
geom_histogram(aes(round(coverage + 1 , 0)),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
# scale_x_log10(breaks = c(0,10, 100, 1000, 10000, 100000, 1000000)) +
xlab("coverage") +
ylab("No. contigs with this coverage") +
ggtitle("contig coverage") + annotation_logticks(sides = "b")
len_dist_plot <- ggplot(data= contigs) +
geom_histogram(aes(length),
bins = 300,
fill="#00B0F6" ) +
scale_x_log10() +
annotation_logticks(sides = "b") +
xlab("contig length") +
ylab("No. contigs") +
ggtitle("contig length")
len1k_dist_plot <- ggplot(data= filter(contigs, length < 1000)) +
geom_histogram(aes(length),
bins = 100,
fill="#00B0F6" ) +
xlab("contig length") +
ylab("No. contigs") +
ggtitle("dist contigs < 1000nt")
len1k_dist_plot
len_dist_plot
cov_dist_plot
cov_dist_plot
cov_dist_plot <- ggplot(data= contigs) +
geom_histogram(aes(round(coverage + 1 , 0)),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10() +
xlab("coverage") +
ylab("No. contigs with this coverage") +
ggtitle("contig coverage") + annotation_logticks(sides = "b")
cov_dist_plot
plot_grid(cov_dist_plot, len_dist_plot)
plot_grid(cov_dist_plot, len_dist_plot, len1k_dist_plot)
plot_grid(cov_dist_plot, len_dist_plot, len1k_dist_plot)
# histogram showing the distribution of coverage
cov_dist_plot <- ggplot(data= contigs) +
geom_histogram(aes(round(coverage + 1 , 0)),
bins = 100,
fill="#00B0F6" ) +
# I add 1 here because the log of 0 is -inf and then the function won't plot it
scale_x_log10() +
xlab("coverage") +
ylab("No. contigs") +
ggtitle("contig coverage") + annotation_logticks(sides = "b")
# histogram of the length distribution
len_dist_plot <- ggplot(data= contigs) +
geom_histogram(aes(length),
bins = 300,
fill="#00B0F6" ) +
scale_x_log10() +
annotation_logticks(sides = "b") +
xlab("contig length") +
ylab("No. contigs") +
ggtitle("contig length")
# histogram of the length for contigs under 1000nt
len1k_dist_plot <- ggplot(data= filter(contigs, length < 1000)) +
geom_histogram(aes(length),
bins = 100,
fill="#00B0F6" ) +
xlab("contig length") +
ylab("No. contigs") +
ggtitle("dist contigs < 1000nt")
# output plots -----------------------------------------------------------------
plot_grid(cov_dist_plot, len_dist_plot, len1k_dist_plot)
plot_grid(cov_dist_plot, len_dist_plot, "",len1k_dist_plot)
plot_grid(cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot)
ggplot(data= contigs)  +
geom_point(aes(x= reorder(factor(contig_name), coverage), y=coverage)) +
scale_y_log10()
ggplot(data= contigs)  +
geom_point(aes(x= reorder(factor(contig_name), coverage), y=coverage))
ggplot(data= contigs)  +
geom_point(aes(x= reorder(factor(contig_name), coverage), y=coverage)) +
scale_y_log10()
arranged.plot <- plot_grid(cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot)
?plot_grid
arranged.plot <- plot_grid("titel", cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot,
ncol = 2, nrow =2, )
plot_grid("titel", cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot,
ncol = 2, nrow =2, )
arranged.plot <- plot_grid("title", cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot,
ncol = 2, nrow =2 )
title <- ggdraw() + draw_label("MPG declines with displacement and horsepower", fontface='bold')
arranged.plot <- plot_grid(title, cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot,
ncol = 2, nrow =2 )
arranged.plot
title <- ggdraw() + draw_label("MPG declines with displacement and horsepower", fontface='bold')
arranged.plot <- plot_grid(cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot,
ncol = 2, nrow =2 )
plot_grid(title, arranged.plot)
plot_grid(title, arranged.plot, ncol=1)
arranged.plot <- plot_grid(cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot,
ncol = 2, nrow =2 )
# cowplot does not have a title function
# So we can just use a grid to place the title on top
title <- ggdraw() + draw_label("MPG declines with displacement and horsepower", fontface='bold')
plot_grid(title, arranged.plot,
ncol=1, rel_heights=c(0.1, 1)) # rel height controls the title margin
arranged.plot <- plot_grid(cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot,
ncol = 2, nrow =2 )
# cowplot does not have a title function
# So we can just use a grid to place the title on top
title <- ggdraw() + draw_label("MPG declines with displacement and horsepower", fontface='bold')
plot_grid(title, arranged.plot,
ncol=1, rel_heights=c(0.1, 1))
arranged.plot <- plot_grid(cov_dist_plot, len_dist_plot, NULL,len1k_dist_plot,
ncol = 2, nrow =2 )
# cowplot does not have a title function
# So we can just use a grid to place the title on top
title <- ggdraw() + draw_label("Sample assembly statistic", fontface='bold')
plot_grid(title, arranged.plot,
ncol=1, rel_heights=c(0.1, 1)) # rel height controls the title margin
plotA <- plot_grid(hist, line, line, ncol=1, labels = c("F", "U"))
# This does not work, we need to tell it about the layout
save_plot("dd.pdf", plotA)
out.plot <- plot_grid(title, arranged.plot,
ncol=1, rel_heights=c(0.1, 1)) # rel height controls the title margin
# This does not work, we need to tell it about the layout
save_plot("Sample.png", out.plot)
save_plot("Sample.png", out.plot, base_width = 10)
save_plot("Sample.png", out.plot, base_width = 8)
save_plot("Sample.png", out.plot, base_width = 8, base_height = 6)
save_plot("Sample.png", out.plot, base_width = 8, base_height = 8)
save_plot("Sample.png", out.plot, base_width = 8, base_height = 8)
dd <- "transrate/summary/Mcla.contigs.csv"
strsplit(dd, "/")
strsplit(dd, "/")[[1]][[-1]]
tail(strsplit(dd, "/")[[1]], 1)
filename <- tail(strsplit(dd, "/")[[1]], 1)
sample_name <- head(strsplit(filename, ".")[[1]], 1)
sample_name
strsplit(filename, ".")[[1]]
filename <- tail(strsplit(dd, "/")[[1]], 1)
filename
strsplit(filename, ".")[[1]]
strsplit(filename, "\.")[[1]]
strsplit(filename, "\.")
strsplit(filename, "")
strsplit(filename, ".")
strsplit(filename, ".csv")
strsplit(filename, ".contigs.csv")
strsplit(filename, ".contigs.csv")[[1]]
dd <- "transrate/summary/Mcla.contigs.csv"
filename <- tail(strsplit(dd, "/")[[1]], 1)
sample_name <- strsplit(filename, ".contigs.csv")[[1]]
sample_name
